[package]
name = "graph-fight"
version = "0.1.0"
authors = ["J. Marc√® i Igual <j.marce.i.igual@tue.nl>"]
edition = "2021"
categories = ["wasm"]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
meval = "0.2"
js-sys = "0.3.69"
rand = { version = "0.8.5", features = ["small_rng"] }
rand_distr = "0.4.3"
num = "0.4.3"
getrandom = { version = "0.2", features = ["js"] }
serde = { version = "1.0", features = ["derive"] }
float-cmp = "0.9.0"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
serde-wasm-bindgen = "0.6.5"
tsify = { version = "0.4.5", features = ["js"] }

[dependencies.web-sys]
version = "0.3.69"
features = [
  'CanvasRenderingContext2d',
  'Document',
  'Element',
  'HtmlCanvasElement',
  'Window',
  'console'
]


[dev-dependencies]
wasm-bindgen-test = "0.3.42"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

